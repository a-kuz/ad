'use client';

import React, { useState } from 'react';
import { generateTestAnalysis } from '@/lib/testAnalysis';
import { validateAndFixAnalysis } from '@/lib/mathValidation';
import { ComprehensiveVideoAnalysis } from '@/types';

export default function TestMathPage() {
  const [analysis, setAnalysis] = useState<ComprehensiveVideoAnalysis | null>(null);
  const [validationResult, setValidationResult] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);

  const runTest = () => {
    setIsLoading(true);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testAnalysis = generateTestAnalysis(30);
    setAnalysis(testAnalysis);
    
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –º–∞—Ç–µ–º–∞—Ç–∏–∫—É
    const validation = validateAndFixAnalysis(
      testAnalysis.dropoutCurve as any,
      testAnalysis.blockDropoutAnalysis || []
    );
    setValidationResult(validation);
    
    setIsLoading(false);
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = (seconds % 60).toFixed(1);
    return `${mins}:${secs.padStart(4, '0')}`;
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-6xl mx-auto px-4">
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">
            üî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
          </h1>
          <p className="text-gray-700 mb-4">
            –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª –≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å–º–æ—Ç—Ä–∞.
          </p>
          
          <button
            onClick={runTest}
            disabled={isLoading}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium disabled:opacity-50"
          >
            {isLoading ? '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ—Å—Ç...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏'}
          </button>
        </div>

        {validationResult && (
          <div className="bg-white rounded-lg shadow p-6 mb-6">
            <h2 className="text-xl font-semibold mb-4 text-gray-900">
              üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            </h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
              <div className={`p-4 rounded-lg ${validationResult.isValid ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'} border`}>
                <div className="text-center">
                  <div className={`text-3xl font-bold ${validationResult.isValid ? 'text-green-600' : 'text-red-600'}`}>
                    {validationResult.isValid ? '‚úÖ' : '‚ùå'}
                  </div>
                  <div className="text-sm font-medium text-gray-700 mt-2">
                    {validationResult.isValid ? '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞' : '–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏'}
                  </div>
                </div>
              </div>
              
              <div className="bg-blue-50 border-blue-200 border p-4 rounded-lg">
                <div className="text-center">
                  <div className="text-3xl font-bold text-blue-600">
                    {validationResult.errors.length}
                  </div>
                  <div className="text-sm font-medium text-gray-700 mt-2">
                    –û—à–∏–±–æ–∫ –Ω–∞–π–¥–µ–Ω–æ
                  </div>
                </div>
              </div>
              
              <div className="bg-purple-50 border-purple-200 border p-4 rounded-lg">
                <div className="text-center">
                  <div className="text-3xl font-bold text-purple-600">
                    {validationResult.fixedDropoutCurve?.points?.length || 0}
                  </div>
                  <div className="text-sm font-medium text-gray-700 mt-2">
                    –¢–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö
                  </div>
                </div>
              </div>
            </div>

            {validationResult.errors.length > 0 && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                <h3 className="font-semibold text-red-800 mb-2">–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</h3>
                <ul className="list-disc list-inside space-y-1">
                  {validationResult.errors.map((error: string, index: number) => (
                    <li key={index} className="text-red-700 text-sm">{error}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        )}

        {analysis && (
          <>
            {/* –ö—Ä–∏–≤–∞—è –¥–æ—Å–º–æ—Ç—Ä–∞ */}
            <div className="bg-white rounded-lg shadow p-6 mb-6">
              <h2 className="text-xl font-semibold mb-4 text-gray-900">
                üìà –ö—Ä–∏–≤–∞—è –¥–æ—Å–º–æ—Ç—Ä–∞ (–ø–µ—Ä–≤—ã–µ 10 —Ç–æ—á–µ–∫)
              </h2>
              
              <div className="overflow-x-auto">
                <table className="min-w-full border border-gray-200 rounded-lg">
                  <thead>
                    <tr className="border-b bg-gray-100">
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–í—Ä–µ–º—è</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–£–¥–µ—Ä–∂–∞–Ω–∏–µ (%)</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–û—Ç–≤–∞–ª (%)</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏</th>
                    </tr>
                  </thead>
                  <tbody>
                    {analysis.dropoutCurve && 'points' in analysis.dropoutCurve ? 
                      analysis.dropoutCurve.points.slice(0, 10).map((point: any, index: number) => {
                      const expectedDropout = 100 - point.retentionPercentage;
                      const mathCheck = Math.abs(point.dropoutPercentage - expectedDropout) < 0.1;
                      
                      return (
                        <tr key={index} className={`border-b ${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}`}>
                          <td className="px-4 py-3 text-gray-800 font-medium">{formatTime(point.timestamp)}</td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{point.retentionPercentage.toFixed(2)}%</td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{point.dropoutPercentage.toFixed(2)}%</td>
                          <td className="px-4 py-3">
                            <span className={`px-2 py-1 rounded text-xs font-medium ${
                              mathCheck ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                            }`}>
                              {mathCheck ? '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}
                            </span>
                          </td>
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>
            </div>

            {/* –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–∞–ª–æ–≤ –±–ª–æ–∫–æ–≤ */}
            <div className="bg-white rounded-lg shadow p-6">
              <h2 className="text-xl font-semibold mb-4 text-gray-900">
                üéØ –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–∞–ª–æ–≤ –±–ª–æ–∫–æ–≤
              </h2>
              
              <div className="overflow-x-auto">
                <table className="min-w-full border border-gray-200 rounded-lg">
                  <thead>
                    <tr className="border-b bg-gray-100">
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ë–ª–æ–∫</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–í—Ä–µ–º—è</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ù–∞—á–∞–ª—å–Ω–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ö–æ–Ω–µ—á–Ω–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –æ—Ç–≤–∞–ª</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–∞–ª</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-800">–ü—Ä–æ–≤–µ—Ä–∫–∞</th>
                    </tr>
                  </thead>
                  <tbody>
                    {analysis.blockDropoutAnalysis?.slice(0, 6).map((block, index) => {
                      const expectedAbsolute = block.startRetention - block.endRetention;
                      const expectedRelative = block.startRetention > 0 ? (expectedAbsolute / block.startRetention) * 100 : 0;
                      
                      const absoluteCheck = Math.abs(block.absoluteDropout - expectedAbsolute) < 0.1;
                      const relativeCheck = Math.abs(block.relativeDropout - expectedRelative) < 0.1;
                      const allCorrect = absoluteCheck && relativeCheck;
                      
                      return (
                        <tr key={block.blockId} className={`border-b ${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}`}>
                          <td className="px-4 py-3 text-gray-800 font-medium">{block.blockName}</td>
                          <td className="px-4 py-3 text-gray-600">
                            {formatTime(block.startTime)} - {formatTime(block.endTime)}
                          </td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{block.startRetention}%</td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{block.endRetention}%</td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{block.absoluteDropout}%</td>
                          <td className="px-4 py-3 text-gray-800 font-medium">{block.relativeDropout}%</td>
                          <td className="px-4 py-3">
                            <span className={`px-2 py-1 rounded text-xs font-medium ${
                              allCorrect ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                            }`}>
                              {allCorrect ? '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ' : '‚ùå –û—à–∏–±–∫–∏'}
                            </span>
                          </td>
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>
              
              <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h3 className="font-semibold text-blue-800 mb-2">üí° –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–æ–≤:</h3>
                <ul className="text-blue-700 text-sm space-y-1">
                  <li><strong>–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –æ—Ç–≤–∞–ª</strong> = –ù–∞—á–∞–ª—å–Ω–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ - –ö–æ–Ω–µ—á–Ω–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ</li>
                  <li><strong>–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–∞–ª</strong> = (–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –æ—Ç–≤–∞–ª / –ù–∞—á–∞–ª—å–Ω–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ) √ó 100%</li>
                  <li><strong>–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–≤–∞–ª–∞</strong> = 100% - –ü—Ä–æ—Ü–µ–Ω—Ç —É–¥–µ—Ä–∂–∞–Ω–∏—è</li>
                </ul>
              </div>
            </div>

            {/* –ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–ª–æ–∫–æ–≤ */}
            {analysis.visualBlocksAnalysisTable && (
              <div className="bg-white rounded-lg shadow p-6">
                <h2 className="text-xl font-semibold mb-4 text-gray-900">
                  üìä –ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–ª–æ–∫–æ–≤
                </h2>
                
                <div className="bg-gray-50 p-4 rounded-lg">
                  <pre className="text-sm text-gray-700 whitespace-pre-wrap font-mono">
                    {analysis.visualBlocksAnalysisTable}
                  </pre>
                </div>
              </div>
            )}
          </>
        )}
      </div>
    </div>
  );
} 